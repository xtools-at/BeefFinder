componentDidMount: function () {
  var location = this.props.location.query.location;

  if (location && location.length > 0) {
    this.handleSearch(location);
    window.location.hash = '#/';
  }
},
   
   
<Link to='/?location=Philadelphia'>Philadelphia, PA</Link>




onSearch: function (e) {
      e.preventDefault();

      var location = this.refs.search.value;
      var encodedLocation = encodeURIComponent(location);

      if (location.length > 0) {
        this.refs.search.value = '';
        window.location.hash = '#/?location=' + encodedLocation;
      }
  },





  <script>
    //fix Footer
    window.onScroll = function(ev) {
      if ((window.innerHeight + window.scrollY + 64) >= document.body.offsetHeight) {
        //bottom reached
        $('#nav').addClass('scrolled-bottom');
      } else {
        $('#nav').removeClass('scrolled-bottom');
      }
    };
  </script>


  //get scroll to bottom
      window.addEventListener('scroll', this.handleScroll);
      console.log('attached event listener onscroll');




      jQuery('.sw-trigger').on(evClKd, function(ev) {
        if (ev.which == '13' || ev.which == '32' || ev.type == 'click') {
            easyswitch.call(this, '');
        }
    });






    render: function () {
    var {todos, showCompleted, searchText} = this.props;
    var renderTodos = () => {
      var filteredTodos = TodoAPI.filterTodos(todos, showCompleted, searchText);

      if (filteredTodos.length === 0) {
        return (
          <p className="container__message">Nothing To Do</p>
        );
      }

      return filteredTodos.map((todo) => {
        return (
          <Todo key={todo.id} {...todo}/>
        );
      });
    };

    return (
      <div>
        {renderTodos()}
      </div>
    )
  }
});



      var todos = snapshot.val() || {};
      var parsedTodos = [];

      Object.keys(todos).forEach((todoId) => {
        parsedTodos.push({
          id: todoId,
          ...todos[todoId]
        });
      });